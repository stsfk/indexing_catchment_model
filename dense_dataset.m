%% Random seed
seed = 1234;
rng(seed);

%% Data
CAMELS_US = readtable('data/CAMELS_US.csv');
[groupidx, group] = findgroups(CAMELS_US.catchment_id);

%% model list
complete_model_list  = {'m_01_collie1_1p_1s',...
    'm_02_wetland_4p_1s',...
    'm_03_collie2_4p_1s',...
    'm_04_newzealand1_6p_1s',...
    'm_05_ihacres_7p_1s',...
    'm_06_alpine1_4p_2s',...
    'm_07_gr4j_4p_2s',...
    'm_08_us1_5p_2s',...
    'm_09_susannah1_6p_2s',...
    'm_10_susannah2_6p_2s',...
    'm_11_collie3_6p_2s',...
    'm_12_alpine2_6p_2s',...
    'm_13_hillslope_7p_2s',...
    'm_14_topmodel_7p_2s',...
    'm_15_plateau_8p_2s',...
    'm_16_newzealand2_8p_2s',...
    'm_17_penman_4p_3s',...
    'm_18_simhyd_7p_3s',...
    'm_19_australia_8p_3s',...
    'm_20_gsfb_8p_3s',...
    'm_21_flexb_9p_3s',...
    'm_22_vic_10p_3s',...
    'm_24_mopex1_5p_4s',...
    'm_25_tcm_6p_4s',...
    'm_26_flexi_10p_4s',...
    'm_27_tank_12p_4s',...
    'm_28_xinanjiang_12p_4s',...
    'm_29_hymod_5p_5s',...
    'm_30_mopex2_7p_5s',...
    'm_31_mopex3_8p_5s',...
    'm_32_mopex4_10p_5s',...
    'm_34_flexis_12p_5s',...
    'm_35_mopex5_12p_5s',...
    'm_36_modhydrolog_15p_5s',...
    'm_37_hbv_15p_5s',...
    'm_40_smar_8p_6s'};

model_list  = {'m_01_collie1_1p_1s',...
    'm_05_ihacres_7p_1s',...
    'm_07_gr4j_4p_2s',...
    'm_13_hillslope_7p_2s',...
    'm_18_simhyd_7p_3s',...
    'm_22_vic_10p_3s',...
    'm_27_tank_12p_4s',...
    'm_28_xinanjiang_12p_4s',...
    'm_34_flexis_12p_5s',...
    'm_37_hbv_15p_5s'
    };

%% Evaluation
n_model = length(model_list);                                   % number of models
n_para_sets = 500;                                              % number of parameters sets
n_catchments = 533;                                             % number of catchments; max = 533
out_length = n_model*n_catchments;                              % length of the experiment results

% Initialize result saving
% ---------------------------------------------------------------------
out = cell(out_length+1,4);
out{1,1} = 'model_name';
out{1,2} = 'catchment_id';
out{1,3} = 'parameter_values';
out{1,4} = 'sampling_results';

tic
out_index = 2;
% iterate over model
for model_id = 1:n_model
    %% Model defination
    model = model_list{model_id};
    
    % Extract the parameter range for this model
    model_range = feval([model,'_parameter_ranges']);             % Call the function that stores parameter ranges
    
    % Find number of stores and parameters
    numPar = size(model_range,1);                                 % Identify the number of model parameters
    
    % Sample a parameter set from the range
    input_thetas = model_range(:,1)+rand(numPar,n_para_sets).*(model_range(:,2)-model_range(:,1)); % random parameters, numPar * n_para_sets
    
    % iterate over catchment
    for catchment_id = 1:n_catchments
        
        catchment_data = CAMELS_US(groupidx==catchment_id, :);    % Data of catchment with groupidx==catchment_id
        
        % iterate over parameter sets
        sampling_results = zeros(n_para_sets, 3);                 % Initialize result saving
        parfor para_set_id=1:n_para_sets
            
            input_theta = input_thetas(:,para_set_id);            % Select the para_set_id th parameter set
            [KGE, NSE, RMSE] = catchment_similarity(catchment_data,model,input_theta); % Compute similarity scores
            sampling_results(para_set_id,:) = [KGE, NSE, RMSE];   % store similarity scores
            
        end
        
        % Display progress
        % ---------------------------------------------------------------------
        disp(['out_index = ', num2str(out_index),' ']);
        disp([num2str(out_index-1), '/',num2str(out_length), ' completed', ' '])
        disp(['catchment_id = ', num2str(catchment_id),' ']);
        disp(['model_id = ', num2str(model_id),' ']);
        disp(' ');
        
        
        % Store simulation results
        % ---------------------------------------------------------------------
        out{out_index,1} = model;                                 % save model name
        out{out_index,2} = catchment_id;                          % save catchment id
        out{out_index,3} = input_thetas;                          % save model parameters
        out{out_index,4} = sampling_results;                      % save modelling results
        
        out_index = out_index + 1;                                % Update result saving index
        
    end
    
    save("out.mat", "out")
end
toc
